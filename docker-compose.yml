services:
  mongodb:
    image: mongo:latest
    networks:
      - internal
    ports:
      - "127.0.0.1:27017:27017"
    container_name: discgenius_mongodb
    volumes:
      - db-volume:/data/db
      - configdb-volume:/data/configdb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - "MONGO_INITDB_ROOT_USERNAME"
      - "MONGO_INITDB_ROOT_PASSWORD"
      - "MONGO_INITDB_DATABASE"
      - "DG_DB_USERNAME"
      - "DG_DB_PASSWORD"
      - "DG_DB_NAME"
  discgenius:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - internal
    container_name: "discgenius-api"
    environment:
      - "DG_DB_USERNAME"
      - "DG_DB_PASSWORD"
      - "DG_DB_ADDRESS"
      - "DG_SONG_DB_NAME"
      - "DG_MIX_DB_NAME"
    depends_on:
      - mongodb
    command: gunicorn discgenius.api:app --bind 0.0.0.0:5000 -w 4 -k uvicorn.workers.UvicornWorker -t 6000
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`discgenius.fb4.htw-berlin.de`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"
  traefik:
    image: traefik:v2.2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./services/traefik/traefik.dev.toml:/etc/traefik/traefik.toml"
volumes:
  db-volume: {}
  configdb-volume: {}
networks:
  internal: { }